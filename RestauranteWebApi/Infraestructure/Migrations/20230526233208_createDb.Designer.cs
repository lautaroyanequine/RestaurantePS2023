// <auto-generated />
using System;
using Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230526233208_createDb")]
    partial class createDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Persistence.Database.Models.Comanda", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormaEntregaId")
                        .HasColumnType("int");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("int");

                    b.HasKey("ComandaId");

                    b.HasIndex("FormaEntregaId");

                    b.ToTable("Comanda", (string)null);
                });

            modelBuilder.Entity("Persistence.Database.Models.ComandaMercaderia", b =>
                {
                    b.Property<int>("ComandaMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComandaMercaderiaId"));

                    b.Property<Guid>("ComandaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("ComandaMercaderiaId");

                    b.HasIndex("ComandaId");

                    b.HasIndex("MercaderiaId");

                    b.ToTable("ComandaMercaderia", (string)null);
                });

            modelBuilder.Entity("Persistence.Database.Models.FormaEntrega", b =>
                {
                    b.Property<int>("FormaEntregaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormaEntregaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FormaEntregaId");

                    b.ToTable("FormaEntrega", (string)null);

                    b.HasData(
                        new
                        {
                            FormaEntregaId = 1,
                            Descripcion = "Salon"
                        },
                        new
                        {
                            FormaEntregaId = 2,
                            Descripcion = "Delivery"
                        },
                        new
                        {
                            FormaEntregaId = 3,
                            Descripcion = "Pedidos Ya"
                        });
                });

            modelBuilder.Entity("Persistence.Database.Models.Mercaderia", b =>
                {
                    b.Property<int>("MercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MercaderiaId"));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ingredientes")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Preparacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TipoMercaderiaId")
                        .HasColumnType("int");

                    b.HasKey("MercaderiaId");

                    b.HasIndex("TipoMercaderiaId");

                    b.ToTable("Mercaderia", (string)null);

                    b.HasData(
                        new
                        {
                            MercaderiaId = 1,
                            Imagen = "imagen_TortilladePapas ",
                            Ingredientes = "Papa,Chorizo colorado,Huevos,Cebolla,Queso",
                            Nombre = "Tortilla de papas",
                            Precio = 800,
                            Preparacion = " Para preparar tortilla de papas: freír papas y cebolla en aceite, mezclar con huevo batido, sazonar, verter en sartén, cocinar a fuego medio-bajo hasta dorar por ambos lados, retirar de la sartén y dejar enfriar.",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 2,
                            Imagen = "imagen_NachosConQueso",
                            Ingredientes = "Naachos,Queso cheddar,Tomate,Verdeo,Guacamole",
                            Nombre = "Nachos con queso y guacamole",
                            Precio = 600,
                            Preparacion = "colocar nachos en una bandeja, agregar queso rallado, hornear a 180°C por unos minutos hasta que el queso se derrita, retirar del horno y servir con salsa y guacamole.",
                            TipoMercaderiaId = 1
                        },
                        new
                        {
                            MercaderiaId = 3,
                            Imagen = "imagen_MilanesasPapasFritas",
                            Ingredientes = "Milanesas de peceto y papas",
                            Nombre = "Milanesas con papa fritas",
                            Precio = 1500,
                            Preparacion = "pasar la carne por huevo batido y pan rallado, freír en aceite caliente hasta dorar ambos lados, acompañar con papas fritas previamente cortadas y fritas en aceite caliente, escurrir el exceso de aceite y servir caliente con limón y/o salsa al gusto.",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 4,
                            Imagen = "imagen_MilanesasNapoPapasFritas",
                            Ingredientes = "Milanesas de peceto y papas",
                            Nombre = "Milanesas napolitana con papa fritas",
                            Precio = 1500,
                            Preparacion = "Para preparar milanesas napolitanas con papas fritas, sigue los pasos para las milanesas simples. Después de freír las milanesas, cúbrelas con salsa de tomate y queso mozzarella rallado. Hornea durante 5-7 minutos o hasta que el queso se derrita. ",
                            TipoMercaderiaId = 2
                        },
                        new
                        {
                            MercaderiaId = 5,
                            Imagen = "imagen_SpaghettiScarparo",
                            Ingredientes = "Crema. oliva, ajo, verdeo, pomodoro fresco y pesto genovés",
                            Nombre = "Spaghetti Scarparo",
                            Precio = 2400,
                            Preparacion = "saltear ajo y ají en aceite, agregar tomate, aceitunas, alcaparras y vino, cocinar salsa. Cocer spaghetti, mezclar con salsa y servir con queso y perejil.",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 6,
                            Imagen = "imagen_SorrentinosPannaDiChampignones",
                            Ingredientes = "Sorrentinos,Crema, ajo, Champignones y jerez",
                            Nombre = "Sorrentinos Panna di Champignones",
                            Precio = 2900,
                            Preparacion = "cocinar sorrentinos en agua hirviendo con sal, saltear champiñones en aceite con ajo y cebolla, agregar crema de leche y cocinar hasta espesar, mezclar con los sorrentinos y servir con queso rallado y perejil",
                            TipoMercaderiaId = 3
                        },
                        new
                        {
                            MercaderiaId = 7,
                            Imagen = "imagen_BifeDeChorizo",
                            Ingredientes = "Bife de Chorizo y acompañamiento",
                            Nombre = "Bife de Chorizo. C/ Papas o Ensalada",
                            Precio = 3000,
                            Preparacion = "salpimentar la carne y cocinar a la parrilla o en sartén caliente con aceite y manteca, dorar ambos lados al gusto, retirar del fuego y dejar reposar unos minutos, servir caliente con ensalada y/o papas fritas.",
                            TipoMercaderiaId = 4
                        },
                        new
                        {
                            MercaderiaId = 8,
                            Imagen = "imagen_TapaDeAsado",
                            Ingredientes = "Tapa de Asado y acompañamiento",
                            Nombre = "Tapa de Asado. C/ Papas o Ensalada",
                            Precio = 2800,
                            Preparacion = "Salpimentar la carne y cocinar a la parrilla o en sartén caliente con aceite y manteca, dorar ambos lados al gusto, retirar del fuego y dejar reposar unos minutos, servir caliente con ensalada y/o papas fritas.",
                            TipoMercaderiaId = 4
                        },
                        new
                        {
                            MercaderiaId = 9,
                            Imagen = "imagen_PizzaMuzzarella",
                            Ingredientes = "Pizza con salsa y muzaarella",
                            Nombre = "Pizza Muzzarella",
                            Precio = 2000,
                            Preparacion = "Estirar la masa de pizza, agregar salsa de tomate, colocar mozzarella en rodajas, hornear a 200°C hasta que la masa esté dorada y el queso derretido, retirar del horno y servir caliente con orégano y/o aceitunas al gusto.",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 10,
                            Imagen = "imagen_Fugazzeta",
                            Ingredientes = "Fugazzeta con cebolla,morron, jamon y queso",
                            Nombre = "Fugazzeta",
                            Precio = 3000,
                            Preparacion = "Estirar la masa de pizza, agregar cebolla en rodajas y queso rallado, hornear a 200°C hasta que la masa esté dorada y el queso derretido, retirar del horno y servir caliente con aceitunas y/o salsa criolla al gusto.",
                            TipoMercaderiaId = 5
                        },
                        new
                        {
                            MercaderiaId = 11,
                            Imagen = "imagen_SandwichMilanesasPapasFritas",
                            Ingredientes = "Milanesa de carne y papas fritas",
                            Nombre = "Sandwich de Milanesa con Papas Fritas",
                            Precio = 2000,
                            Preparacion = "Cocinar la milanesa empanizada en aceite caliente hasta dorar, armar el sandwich con pan, lechuga, tomate y mayonesa, acompañar con papas fritas hechas en aceite caliente y servir caliente.",
                            TipoMercaderiaId = 6
                        },
                        new
                        {
                            MercaderiaId = 12,
                            Imagen = "imagen_SandwichBondiola",
                            Ingredientes = "Bondiola,Queso Provolone,Cebolla Caramelizada",
                            Nombre = "Sandwich de Bondiola",
                            Precio = 2000,
                            Preparacion = "Marinar la carne con hierbas y especias, sellar en una sartén caliente con aceite hasta dorar, cocinar en horno a 180°C durante 45-60 minutos, retirar del horno y dejar reposar, cortar en rodajas y servir caliente con guarnición de verduras al gusto. ",
                            TipoMercaderiaId = 6
                        },
                        new
                        {
                            MercaderiaId = 13,
                            Imagen = "imagen_EnsaladaCesar",
                            Ingredientes = "Lechuga romana,Queso parmesano rallado,Croutones,Salsa César (mayonesa, ajo, jugo de limón, mostaza Dijon, anchoas y queso parmesano rallado)",
                            Nombre = "Ensalda Cesar",
                            Precio = 1200,
                            Preparacion = "Mezclar lechuga romana, pollo asado en trozos, pan tostado y queso parmesano rallado, aderezar con salsa césar (mayonesa, ajo, mostaza, anchoas, jugo de limón y parmesano) y servir frío.",
                            TipoMercaderiaId = 7
                        },
                        new
                        {
                            MercaderiaId = 14,
                            Imagen = "imagen_EnsaladaRusa",
                            Ingredientes = "Papas cocidas y cortadas en cubitos,Zanahorias cocidas y cortadas en cubitos,Guisantes o arvejas cocidas,Mayonesa,Sal y pimienta al gusto",
                            Nombre = "Ensalda Rusa",
                            Precio = 900,
                            Preparacion = "Cocer papas y zanahorias, pelar y cortar en cubos junto con arvejas cocidas y huevo duro, mezclar con mayonesa, sal y pimienta al gusto, enfriar en nevera durante 1 hora y servir frío. ",
                            TipoMercaderiaId = 7
                        },
                        new
                        {
                            MercaderiaId = 15,
                            Imagen = "imagen_CocaCola",
                            Ingredientes = "Coca Cola 650ml ",
                            Nombre = "Coca Cola ",
                            Precio = 500,
                            Preparacion = "Coca Cola en botella",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 16,
                            Imagen = "imagen_AguaMineral",
                            Ingredientes = "Agua Mineral 1lt ",
                            Nombre = "Agua Mineral",
                            Precio = 500,
                            Preparacion = "Agua Mineral en botella",
                            TipoMercaderiaId = 8
                        },
                        new
                        {
                            MercaderiaId = 17,
                            Imagen = "imagen_CervezaIpa",
                            Ingredientes = "Malta base,Malta especial ,Lúpulo,Agua,Levadura",
                            Nombre = "Cerveza IPA",
                            Precio = 900,
                            Preparacion = "Mezclar agua caliente con malta, lúpulo y levadura en un fermentador, fermentar durante una semana a temperatura controlada, embotellar con azúcar para la carbonatación natural, dejar reposar por al menos dos semanas y servir frío.",
                            TipoMercaderiaId = 9
                        },
                        new
                        {
                            MercaderiaId = 18,
                            Imagen = "imagen_CervezaHoney",
                            Ingredientes = "Malta base,Malta especial ,Lúpulo,Agua,Levadura",
                            Nombre = "Cerveza Honey",
                            Precio = 900,
                            Preparacion = "mezclar agua caliente con malta, lúpulo y miel, agregar levadura en un fermentador, fermentar durante una semana a temperatura controlada, embotellar con azúcar para la carbonatación natural, dejar reposar por al menos dos semanas y servir frío.",
                            TipoMercaderiaId = 9
                        },
                        new
                        {
                            MercaderiaId = 19,
                            Imagen = "imagen_Flan",
                            Ingredientes = "Huevos,Leche,Azúcar,Esencia de vainilla o ralladura de limón,Caramelo",
                            Nombre = "Flan C/Dulce o Crema",
                            Precio = 1200,
                            Preparacion = "Mezclar leche, huevos, azúcar y esencia de vainilla, verter en un molde acaramelado, cocinar a baño maría en el horno hasta que esté firme, enfriar en nevera y desmoldar antes de servir.",
                            TipoMercaderiaId = 10
                        },
                        new
                        {
                            MercaderiaId = 20,
                            Imagen = "imagen_Helado",
                            Ingredientes = "Helado sabor a eleccion(3 bochas)",
                            Nombre = "Helado",
                            Precio = 1500,
                            Preparacion = "Bochas de Helado",
                            TipoMercaderiaId = 10
                        });
                });

            modelBuilder.Entity("Persistence.Database.Models.TipoMercaderia", b =>
                {
                    b.Property<int>("TipoMercaderiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoMercaderiaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipoMercaderiaId");

                    b.ToTable("TipoMercaderia", (string)null);

                    b.HasData(
                        new
                        {
                            TipoMercaderiaId = 1,
                            Descripcion = "Entrada"
                        },
                        new
                        {
                            TipoMercaderiaId = 2,
                            Descripcion = "Minutas"
                        },
                        new
                        {
                            TipoMercaderiaId = 3,
                            Descripcion = "Pastas"
                        },
                        new
                        {
                            TipoMercaderiaId = 4,
                            Descripcion = "Parrilla"
                        },
                        new
                        {
                            TipoMercaderiaId = 5,
                            Descripcion = "Pizzas"
                        },
                        new
                        {
                            TipoMercaderiaId = 6,
                            Descripcion = "Sandwich"
                        },
                        new
                        {
                            TipoMercaderiaId = 7,
                            Descripcion = "Ensaladas"
                        },
                        new
                        {
                            TipoMercaderiaId = 8,
                            Descripcion = "Bebidas"
                        },
                        new
                        {
                            TipoMercaderiaId = 9,
                            Descripcion = "Cerveza Artesanal"
                        },
                        new
                        {
                            TipoMercaderiaId = 10,
                            Descripcion = "Postres"
                        });
                });

            modelBuilder.Entity("Persistence.Database.Models.Comanda", b =>
                {
                    b.HasOne("Persistence.Database.Models.FormaEntrega", "FormaEntrega")
                        .WithMany("Comandas")
                        .HasForeignKey("FormaEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaEntrega");
                });

            modelBuilder.Entity("Persistence.Database.Models.ComandaMercaderia", b =>
                {
                    b.HasOne("Persistence.Database.Models.Comanda", "Comanda")
                        .WithMany("ComandasMercaderia")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.Database.Models.Mercaderia", "Mercaderia")
                        .WithMany("ComandasMercaderia")
                        .HasForeignKey("MercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Mercaderia");
                });

            modelBuilder.Entity("Persistence.Database.Models.Mercaderia", b =>
                {
                    b.HasOne("Persistence.Database.Models.TipoMercaderia", "TipoMercaderia")
                        .WithMany("Mercaderias")
                        .HasForeignKey("TipoMercaderiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoMercaderia");
                });

            modelBuilder.Entity("Persistence.Database.Models.Comanda", b =>
                {
                    b.Navigation("ComandasMercaderia");
                });

            modelBuilder.Entity("Persistence.Database.Models.FormaEntrega", b =>
                {
                    b.Navigation("Comandas");
                });

            modelBuilder.Entity("Persistence.Database.Models.Mercaderia", b =>
                {
                    b.Navigation("ComandasMercaderia");
                });

            modelBuilder.Entity("Persistence.Database.Models.TipoMercaderia", b =>
                {
                    b.Navigation("Mercaderias");
                });
#pragma warning restore 612, 618
        }
    }
}
